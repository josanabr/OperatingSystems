#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
#include <assert.h>
#include "leercadena.h"

#define MAX 100

int main(int argc, char* argv[]) {
		char **vector_cadenas;
		char cadena[MAX];

		while (1) { 
				pid_t pid;
				int en_background;
				printf("> ");
				leer_de_teclado(MAX, cadena);
				if (strlen(cadena) == 0) {
						continue;
				}
				vector_cadenas = de_cadena_a_vector(cadena);
				en_background = encontrar_cadena("&",vector_cadenas);
				if (strcmp("salir",vector_cadenas[0]) == 0) break;
				pid = fork(); 
				assert(pid >= 0);
				if (pid == 0) { 
						if (en_background != -1) 
								vector_cadenas[en_background] = NULL;
						execvp(vector_cadenas[0], vector_cadenas);
				} else {
						if (en_background == -1)
								wait(NULL);
						else {
								// Cuando un proceso hijo no es esperado por su padre, el proceso
								// queda en un estado Zombi
								printf("El proceso %d se ejecutara en background\n",pid);
								sleep(4);
								kill(pid, SIGKILL);
						}
				}
		}
		printf("Gracias por usar mi dummy shell ;-)\n");

		exit(0);
}
